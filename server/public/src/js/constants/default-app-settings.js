`use strict`;
import API_URLS from "../constants/api-urls.js";

const DEFAULT_APP_SETTINGS = Object.freeze({

	USE_DEFAULT_LOGGER: true,
	
	// PARCELIZED_CLUSTER_PLOTS_BUFFER: -0.005,
	PARCELIZED_CLUSTER_PLOTS_BUFFER: -0.0065,

	CLUSTER_PLOTS_MAP: {
		ZOOM: 12,
		PITCH: 50,
		BEARING: 10,
		STROKE_THICKNESS: 2,
		FILL_OPACITY: 0.1,
		USE_BUFFER: false,
		PLOT_BUFFER_AMT: -0.005,
	},

	LEAFLET_ADMIN_LEVEL_1_ZOOM: 9,
	LEAFLET_ADMIN_LEVEL_2_ZOOM: 12,
	LEAFLET_ADMIN_LEVEL_3_ZOOM: 15.5,
	LEAFLET_MAX_ZOOM: 18,

	MAP_POLYGON_LINE_COLORS: {
		BASEMAP: {
			GEO_POL_REGIONS: "#BDC581", // faded green
		},
	},

	MAP_POLYGON_LINE_WEIGHTS: {
		BASEMAP: {
			GEO_POL_REGIONS: 1.5,
		},
	},

	GEOCLUSTERS_API_HOST: API_URLS.GEOCLUSTERS.HOST.AWS,

	// GEOCLUSTERS_API_RESOURCE_PATHS: ["api/v2/legacy-agcs", "api/v1/parcelized-agcs", "api/v1/agcs", "api/v2/geo-clusters"],
	PARCELIZED_CLUSTERS_RESOURCE_PATHS: API_URLS.GEOCLUSTERS.RESOURCE_PATHS.PARCELIZED_CLUSTERS,

	// TO GET A SINGLE PARCELIZED CLUSTER BY CLUSTER ID
	PARCELIZED_CLUSTER_API_RESOURCE_PATH: API_URLS.GEOCLUSTERS.RESOURCE_PATHS.PARCELIZED_CLUSTER,

	// DATA ATTRIBUTE THAT STORES CLUSTER GEOJSON DATA FROM THE VIEW CONTROLLER
	GEOCLUSTER_RECORD_DATA_ATTR_NAME: `geoclusterdatastream`,

	ADMIN_BOUNDS_GEOJSON_API_HOST: API_URLS.ADMIN_BOUNDS.HOST.SELF,

	ADMIN_BOUNDS_GEOJSON_API_RESOURCE_PATHS: API_URLS.ADMIN_BOUNDS.RESOURCE_PATHS,
});

export default DEFAULT_APP_SETTINGS;
