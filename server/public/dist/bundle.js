(()=>{var e={291:(e,t,r)=>{"use strict";function a(){const e=document.getElementsByTagName("button"),t=document.querySelector(".nav__el--logout"),r=document.getElementById("v_pills_tab"),a=document.getElementById("app_sidebar_expand_button"),n=(document.getElementById("avg_settings_sidebar_toggle_btn"),document.querySelector(".app-activity-indicator-wrapper")),o=document.querySelector(".app-activity-indicator"),s=document.querySelector(".app-activity-start-indicator-text"),l=document.querySelector(".app-activity-end-indicator-text"),i=document.querySelectorAll(".pane-resize-btn"),c=document.getElementById("geo_cluster_insights_tab_btn"),u=document.getElementById("geo_cluster_insights_tab_pane"),d=document.getElementById("geo_cluster_details_tab_btn"),p=document.getElementById("geo_cluster_details_tab_pane"),f=document.getElementById("results_count"),g=document.getElementById("results_status"),m=document.querySelectorAll(".results-filter-checkbox[type=checkbox]"),y=document.querySelectorAll(".results-filter-checkbox.master-checkbox[type=checkbox]"),b=document.querySelectorAll(".base-map-tile-radio");return{buttons:e,logoutBtn:t,appSidebar:r,sidebarExpandBtn:a,appActivityIndWrapper:n,appActivityIndEl:o,appActivityStartIndTextEl:s,appActivityEndIndTextEl:l,plotsMapStyleRadios:document.querySelectorAll(".cluster-plots-map-style-radio"),baseMapRadios:b,distanceUnitsRadios:document.querySelectorAll(".map-distance-units-radio"),areaUnitsRadios:document.querySelectorAll(".map-area-units-radio"),clusterMapZoomRange:document.getElementById("cluster_map_zoom"),paneResizeBtns:i,clusterInsightsTabBtn:c,clusterInsightsTabPane:u,clusterDetailsTabBtn:d,clusterDetailsTabPane:p,resultsCountDiv:f,resultsStatus:g,geoClustersDatasetEl:document.getElementById("geo_clusters_dataset"),clusterResultsBody:document.querySelector(".cluster-results-body"),resultModalDiv:document.getElementById("result_item_modal"),resultModalCloseBtn:document.getElementById("result_item_modal_close_btn"),resultsFilterBtn:document.getElementById("results_filter_button"),resultsScrollTopBtn:document.getElementById("results_scroll_top_button"),resultsListWrapper:document.getElementById("results_list_wrapper"),resultItemDivs:document.querySelectorAll(".result-item"),clusterTitleDivs:document.querySelectorAll(".result-item-title"),masterResultCheckbox:document.getElementById("select_all_results_chk"),resultItemCheckboxes:document.querySelectorAll(".result-item-checkbox[type=checkbox]"),clusterFilterCheckboxes:m,clusterFilterCheckboxMasters:y,clusterFeatsNumEl:document.getElementById("cluster_feats_num"),clusterAreaEl:document.getElementById("cluster_area"),clusterUsedAreaEl:document.getElementById("cluster_used_area"),clusterUnusedAreaEl:document.getElementById("cluster_unused_area"),featsListingDiv:document.getElementById("cluster_feats_listing_body"),bufferFeatsChkBx:document.getElementById("buffer_cluster_feats_chk"),renderMultiFeatsChkBx:document.getElementById("render_multiple_feats_chk")}}r.r(t);const n=Object.freeze({GEOCLUSTERS:{HOST:{LOCAL:"http://127.0.0.1:9443",HEROKU:"https://geoclusters.herokuapp.com",AWS:"http://18.213.158.252:8443"},RESOURCE_PATHS:{PARCELIZED_CLUSTERS:["api/v1/parcelized-agcs/","api/v1/parcelized-agcs/metadata"],PARCELIZED_CLUSTERS_ONLY:"api/v1/parcelized-agcs",PARCELIZED_CLUSTERS_METADATA:"api/v1/parcelized-agcs/metadata",PARCELIZED_CLUSTER:"api/v1/parcelized-agcs/parcelized-agc"}},ADMIN_BOUNDS:{HOST:{SELF:window.location.origin,LOCAL:"http://127.0.0.1:9090",HEROKU:"https://geoclusters.herokuapp.com",AWS:"http://54.225.80.233:9090"},RESOURCE_PATHS:["api/v1/geojson/nga-geo-pol-regions","api/v1/geojson/nga-admin-bounds-lvl1","api/v1/geojson/nga-admin-bounds-lvl2","api/v1/geojson/nga-admin-bounds-lvl3"]}}),o=Object.freeze({USE_DEFAULT_LOGGER:!0,PARCELIZED_CLUSTER_PLOTS_BUFFER:-.0065,CLUSTER_PLOTS_MAP:{ZOOM:12,PITCH:50,BEARING:10,STROKE_THICKNESS:2,FILL_OPACITY:.1,USE_BUFFER:!1,PLOT_BUFFER_AMT:-.005},LEAFLET_ADMIN_LEVEL_1_ZOOM:9,LEAFLET_ADMIN_LEVEL_2_ZOOM:12,LEAFLET_ADMIN_LEVEL_3_ZOOM:15.5,LEAFLET_MAX_ZOOM:18,MAP_POLYGON_LINE_COLORS:{BASEMAP:{GEO_POL_REGIONS:"#BDC581"}},MAP_POLYGON_LINE_WEIGHTS:{BASEMAP:{GEO_POL_REGIONS:1.5}},GEOCLUSTERS_API_HOST:n.GEOCLUSTERS.HOST.AWS,PARCELIZED_CLUSTERS_RESOURCE_PATHS:n.GEOCLUSTERS.RESOURCE_PATHS.PARCELIZED_CLUSTERS,PARCELIZED_CLUSTER_API_RESOURCE_PATH:n.GEOCLUSTERS.RESOURCE_PATHS.PARCELIZED_CLUSTER,GEOCLUSTER_RECORD_DATA_ATTR_NAME:"geoclusterdatastream",ADMIN_BOUNDS_GEOJSON_API_HOST:n.ADMIN_BOUNDS.HOST.SELF,ADMIN_BOUNDS_GEOJSON_API_RESOURCE_PATHS:n.ADMIN_BOUNDS.RESOURCE_PATHS}),s=()=>{throw new Error("Parameter is required.")};function l(e,{inclQuotes:t=!1,commaSeparated:r=!1}={}){const a=e.filter(Boolean).map((e=>t?`"${e.trim()}"`:e.trim()));return r?a.join(", "):a.join(" ")}const i=(()=>{let e;return{evaluateValue:function(...t){const r=[...t];try{let t=r[0];for(let e=0;e<r.length-1;e++)t=t[r[e+1]];return e=t,e}catch(e){return null}},getFinalValue:function(){return e}}})(),c=e=>e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",");function u(e,t){return 1===e?t:t+"s"}function d(e){return e.charAt(0).toUpperCase()+e.slice(1)}function p(e){const t=[];let r=null,a=null;try{if(e){if(e.forEach((e=>{e.checked&&t.push(e)})),t.length>1)throw new Error("Cannot have more than one checked radio per group");if(0===t.length)throw new Error("At least one radio must be checked by default");return t.length>0&&(r=t[0],a=t[0].value),{radioElement:r,radioValue:a}}}catch(e){console.error(`getCheckedRadioErr: ${e.message}`)}}const f=(e,t)=>{const r=e[0],a=e[1],n=t[0],o=t[1],s=r*Math.PI/180,l=n*Math.PI/180,i=a*Math.PI/180,c=o*Math.PI/180,u=Math.sin(c-i)*Math.cos(l),d=Math.cos(s)*Math.sin(l)-Math.sin(s)*Math.cos(l)*Math.cos(c-i);return(180*Math.atan2(u,d)/Math.PI+360)%360},g=e=>{var t=Math.abs(e),r=Math.floor(t),a=60*(t-r),n=Math.floor(a);return`${r}Â° ${n}' ${(60*(a-n)).toFixed(2)}"`},m={getType:e=>{try{return turf.getType(e)}catch(e){console.error(`getTypeErr: ${e.message}`)}},buffer:(e,t,{units:r="kilometers"})=>{try{return turf.buffer(e,t,{units:r})}catch(e){console.error(`turfBufferErr: ${e.message}`)}},midpoint:(e,t)=>{try{return turf.midpoint(e,t)}catch(e){console.error(`turfMidpointErr: ${e.message}`)}},centerOfMass:e=>{try{return turf.centerOfMass(e)}catch(e){console.error(`comErr: ${e.message}`)}},distance:(e,t,{distUnits:r})=>{try{return turf.distance(e,t,{units:r})}catch(e){console.error(`turfDistanceErr: ${e.message}`)}},centerOfMass:e=>{try{return turf.centerOfMass(e)}catch(e){console.error(`pointOnFeatErr: ${e.message}`)}},unkinkPolygon:e=>{try{return turf.unkinkPolygon(e)}catch(e){console.error(`unkinkPolyErr: ${e.message}`)}},getLngLat:e=>{try{return m.centerOfMass(e).geometry.coordinates}catch(e){console.error(`getLngLatErr: ${e.message}`)}},calcPolyArea:(e,{units:t="hectares"}={})=>{try{if(e&&"Polygon"===turf.getType(e)||"MultiPolygon"===turf.getType(e)){let r=turf.area(e);switch(!0){case"hectares"===t||"ha."===t||"ha"===t:r/=1e4;break;case"acres"===t||"ac."===t||"ac"===t:r/=4046.86;break;case"sqkm"===t||"square kilometers"===t:r/=1e6}return r}}catch(e){console.error(`calcPolyAreaErr: ${e.message}`)}}};function y(e){const t=[];return e.geometry.geometries.forEach((e=>{if("Polygon"===m.getType(e)){const r=turf.feature(e);t.push(r),polygonFeats=t}else polygonFeats=null})),polygonFeats}function b(e,t,{bufferUnits:r="kilometers"}={}){if(e){let a=m.buffer(e,t,{units:r});return a?(a.geometry._id=e.geometry._id,m.calcPolyArea(e)<.5||m.getType(e)!==m.getType(a)||t>0&&m.calcPolyArea(a)<m.calcPolyArea(e)||t<0&&m.calcPolyArea(a)>m.calcPolyArea(e)?e:a):e}return e}const h={getId:e=>{try{if("FeatureCollection"===turf.getType(e))return`feature_collection_${e._id}`;if(e.geometry._id)return`feature_${e.geometry._id}`}catch(e){console.error(`getGeoJSONIdErr: ${e.message}`)}},bufferUniteFeats:(e,{maxBufferAmt:t,bufferStep:r}={})=>{const a=[];try{if(!t||!r)return turf.union(...e);{let n=r;for(;n<=t;){n+=r,console.log({bufferAmount:n});for(let t=0;t<e.length;t++){let r=e[t];r=b(r,n),a.push(r)}const t=turf.union(...a);if("Polygon"===m.getType(t))return t}}}catch(e){console.error(`bufferFeatsErr: ${e.message}`)}},getPresentationPoly:(e,{useBuffer:t,bufferAmt:r,bufferUnits:a="kilometers"})=>t?b(e,r,{bufferUnits:a}):e,getFeatCollPoly:(e,{useBuffer:t,bufferAmt:r,bufferUnits:a}={})=>{try{turf.geojsonType(e,"FeatureCollection","getFeatCollPolyErr"),console.log(e.properties.clusterName);let n=function(e){let t,r,a=[];switch(m.getType(e)){case"Polygon":r=e,a=null;break;case"MultiPolygon":const n=[];for(let r=0;r<e.geometry.coordinates.length;r++){const a=e.geometry.coordinates[r];n.push(turf.polygon(a)),t=n}break;case"GeometryCollection":t=y(e)}if(t&&t.length>0)if(1===t.length)r=t[0];else for(let n of t){const o=m.calcPolyArea(n)/m.calcPolyArea(e);o>=.6?r=n:o>=.4&&o<.6?(r=h.bufferUniteFeats(t,{maxBufferAmt:.05,bufferStep:.0025}),"Polygon"!==m.getType(r)&&(console.error("FAILED REFINING GEOJSON"),a.push(...t))):o>=.005&&o<.4&&(n.properties.chunk_size=m.calcPolyArea(n),a.push(n))}return{refinedGeoJSON:r,discardedMultipolyParts:a}}(turf.union(...e.features)).refinedGeoJSON;return n&&(n=h.getPresentationPoly(n,{useBuffer:t,bufferAmt:r,bufferUnits:a})),n}catch(e){console.error(`getFeatCollPolyErr: ${e.message}`)}},getBbox:e=>{try{return turf.bbox(e)}catch(e){console.error(`getBboxErr: ${e.message}`)}},getBboxPoly:e=>{try{return turf.bboxPolygon(h.getBbox(e))}catch(e){console.error(`getBboxPolyErr: ${e.message}`)}}},v=({expandingArray:e,staticArray:t})=>{let r=[];for(let a of e)-1===t.indexOf(a)&&r.push(a);return r},E=Object.freeze({LANDING_PAGE:{MAPBOX:"pk.eyJ1IjoibW9ub2xpdGhnb29uIiwiYSI6ImNrN3B1MnNjaDBhNTczcHFkdmJ0aHR6dWEifQ.O0mHuJ2wKNqKz3E_BIsnog"},DASHBOARD:{MAPBOX:"pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw",BING:"ArOrASno0BM9N0a3FfAOKXbzNfZA8BdB5Y7OFqbDIcbhkTiDHwmiNGfNFXoL9CTY"}}),C="FieldDev Group",S=L.map("avg_base_map_container",{zoomSnap:.01,preferCanvas:!0}),A=L.map("feature_detail_map_container",{zoomSnap:.01,preferCanvas:!0}),x=new mapboxgl.Map({attribution:C,container:"parcelization_map_container",style:"mapbox://styles/mapbox/outdoors-v11",accessToken:E.DASHBOARD.MAPBOX,center:[7.03691902649687,4.654776030857737],pitch:50,bearing:10,zoom:8}),T=Object.freeze({GOOGLE:Object.freeze({STREETS:"http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}",HYBRID:"http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}",SATELLITE:"http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}",TERRAIN:"http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}"}),OSM:{STANDARD:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",BW:"http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png",HUMANITARIAN:"http://b.tile.openstreetmap.fr/hot/${z}/${x}/${y}.png"},BING:{ROAD:"RoadOnDemand",ARIAL:"AerialWithLabels",BIRDS_EYE:"BirdseyeWithLabels"},ERSI:{STANDARD:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",TRANSPORTATION:"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}",TERRAIN:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}",TOPO_WORLD:"http://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}"},STAMEN:{TONER:"http://a.tile.stamen.com/toner/${z}/${x}/${y}.png",COLOR:"http://c.tile.stamen.com/watercolor/${z}/${x}/${y}.jpg"},CARTO:{LIGHT:"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png",DARK:"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png"},MAPBOX:"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}"}),O={googleStreets:L.tileLayer(T.GOOGLE.STREETS,{maxZoom:28,subdomains:["mt0","mt1","mt2","mt3"]}),googleHybrid:L.tileLayer(T.GOOGLE.HYBRID,{maxZoom:28,subdomains:["mt0","mt1","mt2","mt3"]}),mapboxOutdoors:L.tileLayer(T.MAPBOX,{attribution:'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',maxZoom:18,id:"mapbox/outdoors-v11",tileSize:512,zoomOffset:-1,accessToken:E.DASHBOARD.MAPBOX}),osmStd:L.tileLayer(T.OSM.STANDARD,{maxZoom:18,optimize:!0,attribution:`${C} &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors`}),osmBW:L.tileLayer(T.OSM.BW,{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',opacity:parseFloat($("#mapopacity-select").val())}),bingMapsArial:L.bingLayer(E.DASHBOARD.BING,{imagerySet:T.BING.ARIAL,maxZoom:28,detectRetina:!0,retinaDpi:"d2",mapLayer:"TrafficFlow",attribution:`&copy; ${C}`})},k="farmer",P="hectare",I="pre-loaded-geoclusters";function M(e){const t=document.createElement("div");return t.classList.add(...e),t}const D=(e=>{try{const t=function(){return M(e)},r=function(e,t){return e(t)},a=function(e){return`\n            <div class='result-item-header flex-row-start'>\n               <div class='result-item-titles flex-col-start flex-1'>\n                  <a class='result-item-title' title='Geo Cluster Name' href='#' title='Geo Cluster Name'>${e.clusterName}</ac>\n                  <small class='result-item-subtitle flex-row-center-btw'>\n                     <svg class="locaiton-svg-icon" preserveAspectRatio="xMidYMid" viewBox="0 0 24 24">\n                        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z"></path>\n                     </svg>\n                     <a>${e.clusterAdminLvl3}, ${e.clusterAdminLvl2}</a>\n                  </small>\n               </div>\n               <div class="result-item-controls flex-row-center-end">\n                  <div class="btn-group">\n                     <button class="btn btn-outline btn-sm dropdown-toggle" id="dropdownMenuClickableInside" type="button" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">...</button>\n                     <ul class="dropdown-menu" aria-labelledby="dropdownMenuClickableInside">\n                        <li><a class="dropdown-item" href="#">Copy Map Preview Link</a></li>\n                        <li><a class="dropdown-item" href="#">Copy Coordinates</a></li>\n                        <li><a class="dropdown-item" href="#">Open Cluster Map</a></li>\n                        <li><a class="dropdown-item" href="#">Share Cluster</a></li>\n                     </ul>\n                  </div>\n                  <input class="form-check-input result-item-checkbox" id="select_result_item_chk_25" type="checkbox" value="resultItemCheckbox25" aria-label="select result checkbox">\n            </div>\n            </div>\n            <div class="result-item-body flex-col-start">\n            <a href="#" class="admin1-name" id="cluster_gov_admin1">President ${_.startCase(l(Object.values(e.clusterGovAdmin1)))}</a>\n            <div class="result-item-pill">\n               <span id="cluster_num_features">${e.clusterFeatsNum} Farmers</span>\n               <span>â¢</span>\n               <span id="cluster_area">${c(+e.clusterArea)} Hectares</span>\n               <span>â¢</span>\n               <span id="cluster_area">${+e.clusterArea} Cassava</span>\n            </div>\n            </div>\n         `};return{getClusterResultDiv:function(e){const n=t(),o=r(_GetClusterProps,e);return n.innerHTML=a(o),n}}}catch(e){console.error(`clusterMarkupGenErr: ${e.message}`)}})(["result-item","flex-col-start"]),B=(()=>{try{const e=function(e){return`\n            <div class="result-item-modal-controls">\n               <button\n                  class="btn-close btn-close-white"\n                  id="result_item_modal_close_btn"\n                  type="button"\n                  aria-label="close"\n               ></button>\n            </div>\n            <div class="result-item-modal-header flex-row-center-btw">\n               <span>${c(+e.clusterFeatsNum)} ${d(u(+e.clusterFeatsNum,k))}</span><span>${c(+e.clusterArea.toFixed(0))} ${d(u(+e.clusterArea,P))}</span>\n            </div>\n            <div class="result-item-modal-title flex-row-center">\n               <span id="modal_title">${e.clusterName}</span>\n            </div>\n            <div class="result-item-modal-body flex-col-center">\n               <span class="modal-person-avatar">\n                  <img\n                     class="rounded-circle"\n                     src="/src/assets/images/users/img_avatar1.png"\n                     alt="Modal Avatar" />\n               </span>\n               <span class="modal-person-details flex-col-center">PMRO â¢ Abdulsalam Dansuki</span>\n               <span class="modal-person-contact flex-row-center-btw">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n               </span>\n            </div>\n            <div class="result-item-modal-subtext">\n               <span>\n                  Primary commodity â¢ Maize, Rice. Clay soil. No irriation. Closest PMRO\n                  site 40km away. No power. Closest market 10km away. No processing\n                  capability. Funded June 17, 2019. 13.3 hectares unused. \n                     <span>Last visited â¢ 21 August, 2021.</span>\n                  </span>\n            </div>\n            <div class="result-item-modal-footer flex-row-center-btw">\n               <span>Block AGC</span>\n               <span class="flex-row-center-btw">\n                  <svg class="svgIcon" preserveAspectRatio="xMidYMid" viewBox="0 0 24 24">\n                     <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z"></path>\n                  </svg>\n                  <span>${e.clusterLocation}</span>\n               </span>\n            </div>\n         `};return{getInnerMarkup:t=>e(t)}}catch(e){console.error(`modalMarkupGenErr: ${e}`)}})(),w=e=>{try{return`\n         <div class= "plot-metadata-label--chunk-size"> \n            <span> ${c(+e.clusterArea.toFixed(0))} hectares </span>\n            <span> ${c((2.47105*+e.clusterArea).toFixed(0))} acres </span> \n         </div>\n         <div class="metadata-label--owner-info__avg"> \n            <span> ${e.clusterName} </span>\n            <span>${e.clusterFeatsNum} Farmers â¢\n               <span>${e.clusterLocation}</span>\n            </span>\n         </div>\n         <div class="metadata-label--turn-by-turn" id="metadata_label_turn_by_turn">\n            <a href="#" role="button" title="Plot boundary turn-by-turn directions" aria-label="Plot boundary turn-by-turn directions"></a>\n               <span >\n                  <i id="" class="fas fa-route"></i>\n               </span>\n         </div>`}catch(e){console.error(`HTMLMarkupErr: ${e.message}`)}},R=(()=>{try{function e(e){const t=document.createElement("card");return t.classList.add(...e),t}const t=function(e){return`\n            <div class="card-content-wrapper">\n               <div class="card-media-wrapper">\n                  <div class="feat-admin-avatar">\n                     <img\n                        src="${e.featureAdmin.admin1.imageUrl||"/assets/icons/icons8-person-48.png"}"\n                        alt="Plot Owner Avatar"/>\n                  </div>\n               </div>\n               <div class="card-text-wrapper">\n                  <div class="card-text-top">\n                     <div class="main-card-text">\n                        <span class="feat-admin1-title flex-center justify-start">${e.featureAdmin.admin1.fullName}</span>\n                        <span>${e.featureCenterLng.toFixed(6)}Â°E â¢ ${e.featureCenterLat.toFixed(6)}Â°N</span>\n                     </div>\n                     <div class="card-pills">\n                        <span class="flex-row-center">Plot ${e.featureIndex}</span>\n                        <span class="flex-row-center">${e.featureArea} ha.</span>\n                     </div>\n                  </div>\n                  <div class="card-text-bottom">\n                     <div class="flex-row-start">\n                        <span>FID</span><span>${`${e.featureAdmin.admin1.id}`.slice(0)}</span>\n                     </div>\n                     <div class="flex-row-start">\n                        <span class="flex-row-center">VASTID</span>\n                        <span id="feat_card__feat_id">${`${e.featureID}`.slice(0)}</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         `},r=function(e){const t=e.featureAdmin.admin1;return`\n            <section class="feat-card-bio-section">\n\n               <section class="section-1">\n                  <div><span>PHONE</span><span>${t.phoneNo}</span></div>\n                  <div><span>AGE</span><span>${t.age}</span></div>\n               </section>\n\n               <section class="section-2">\n                  <div><span>ID TYPE</span><span>National Identity Number</span></div>\n                  <div><span>ID No.</span><span>${t.govIdNo}</span></div>\n               </section>\n\n               <section class="section-3">\n                  <div><span>ORIGIN</span><span>Oshimili South, Delta State</span></div>\n                  <div>\n                     <span>HOUSE ADDRESS</span\n                     ><span>466 Tudun Wada, Wawa, Niger State</span>\n                  </div>\n               </section>\n\n            </section>\n\n            <section class="feat-card-funding-section">\n               <section class="funding-section-1">\n                  <div><span>FUNDING</span><span>Legacy Funding</span></div>\n               </section>\n            </section>\n         `};return{getClusterFeatDiv:async function(a){const n=M(["cluster-feature-wrapper"]),o=e(["cluster-feature-card"]);o.innerHTML=t(a);const s=M(["cluster-feature-card-drawer"]);return s.innerHTML=r(a),n.appendChild(o),n.appendChild(s),{clusterFeatCard:o,clusterFeatCardWrapper:n}}}}catch(a){console.error(`featMarkupGenErr: ${a.message}`)}})(),F=(()=>{function e(e){ae.toggleClassList(e,"reveal")}function t(e){ae.toggleClassList(e,"spinner-grow","text-light","spinner-grow-sm")}return{activityStart:(r,a,n,o,s)=>{e(r),t(a),n.innerText=s},activityEnd:(r,a,n,o,s)=>{t(a),e(r),n.innerText="",o.innerText=`${s}s`}}})(),N=({logger:e=(o.USE_DEFAULT_LOGGER?console.log:void 0)}={})=>({executeNotify:async(t,{startDisplayFn:r=(()=>{}),endDisplayFn:a=(()=>{}),appActivityIndWrapper:n=null,appActivityIndEl:o=null,appActivityStartIndTextEl:s=null,appActivityEndIndTextEl:l=null,appActivityIndText:i=""}={})=>{if(![r,a,n,o,s,l,i].every(Boolean))throw new Error("One or more required arguments for the 'executeNotify' function are missing.");r(n,o,s,l,i),e&&e(`%c This function [ ${t.name} ] is executing ..`,"background-color: lightgrey; color: blue;");const[c,u]=await Promise.all([t(),new Promise((e=>{const t=Date.now();setTimeout((()=>e(Date.now()-t)),0)}))]),d=(u/1e3).toFixed(2);return e&&e(`%c The fn. [ ${t.name} ] executed in: ${d} seconds`,"background-color: yellow; color: blue;"),a(n,o,s,l,d),{executionMs:u,returnedData:c}},execute:async t=>{e&&e(`%c This function [ ${t.name} ] is executing ..`,"background-color: lightgrey; color: blue;");const[r,a]=await Promise.all([t(),new Promise((e=>{const t=Date.now();setTimeout((()=>e(Date.now()-t)),0)}))]),n=(a/1e3).toFixed(2);return e&&e(`%c The fn. [ ${t.name} ] executed in: ${n} seconds`,"background-color: yellow; color: blue;"),{executionMs:a,returnedData:r}}}),U=["#b71540","#088","#f39c12","#8e44ad","#be2edd","#eb4d4b","#535c68","#EAB543","#a29bfe","#686de0","#f9ca24","#2d3436","#44bd32","#00a8ff","#FD7272","#78e08f","#b71540","#f0932b","#130f40","#EAB543","#1B9CFC","#57606f","#3742fa","#2d3436","#be2edd","#FD7272","#78e08f","#f0932b","#EAB543","#1B9CFC","#b2bec3","#a4b0be","#fd79a8","#00b894","#ED4C67","#B53471","#833471","#6F1E51","#088","#f39c12","#8e44ad","#eb4d4b","#44bd32","#130f40","#00a8ff","#535c68","#EAB543","#a29bfe","#686de0","#f9ca24","#2d3436","#be2edd","#FD7272","#78e08f","#b71540","#f0932b","#EAB543","#1B9CFC","#57606f","#3742fa","#2d3436","#be2edd","#FD7272","#78e08f","#b71540","#f0932b","#EAB543","#1B9CFC","#b2bec3","#a4b0be","#fd79a8","#00b894","#FFC312","#F79F1F","#EE5A24","#EA2027","#C4E538","#A3CB38","#009432","#006266","#12CBC4","#1289A7","#0652DD","#1B1464","#FDA7DF","#D980FA","#9980FA","#5758BB","#ED4C67","#B53471","#833471","#6F1E51","#1abc9c","#2ecc71","#3498db","#9b59b6","#34495e","#16a085","#27ae60","#2980b9","#8e44ad","#2c3e50","#f1c40f","#e67e22","#e74c3c","#ecf0f1","#95a5a6","#f39c12","#d35400","#c0392b","#bdc3c7","#7f8c8d"],G=((e,t)=>{const r=L.layerGroup().addTo(e),a=L.layerGroup().addTo(t),n=[];return{initLayerGroup:(e,{visibilityRank:t=3})=>{const r={layer_group_id:e,visibility_rank:t,layer_group:L.layerGroup()};return n.push(r),r.layer_group},returnLayerGroupObjs:({layerGroupId:e,visibilityRank:t})=>{console.log({LAYER_GROUP_OBJS:n});let r=[];if(e&&!t)r=n.filter((t=>t.layer_group_id===e));else if(!e&&t)r=n.filter((e=>e.visibility_rank<=t));else{if(!e||!t)return n;r=n.filter((r=>{if(r.layer_group_id===e&&r.visibility_rank===t)return r}))}return r},getLayerGroups:()=>({baseMapLayerGroup:r,modalMapLayerGroup:a})}})(S,A),z=(((e,t)=>{const{googleStreets:r,googleHybrid:a,osmStd:n,osmBW:o,mapboxOutdoors:s,bingMapsArial:l}=O;function i(e,{keepLayer:t=null}){e.eachLayer((function(r){r instanceof L.TileLayer&&r!==t&&e.removeLayer(r)}))}var c;e.addLayer(a),e.setView([8.925135520364144,9.268105727065828],6.5),t.addLayer(a),e.on("zoomend",(function(){!function(e){const t=e.getZoom();switch(!0){case t<9.5:e.addLayer(a),i(e,{keepLayer:a});break;case t>9.5&&t<11.5:e.addLayer(r),i(e,{keepLayer:r});break;case t>11.5&&t<13:e.addLayer(n),i(e,{keepLayer:n});break;case t>13&&t<18:e.addLayer(l),i(e,{keepLayer:l});break;case t>18:e.addLayer(a),i(e,{keepLayer:a});break;default:i(e,{}),a.addTo(e)}}(e);const t=V.getMapZoom();console.log({zoomLevel:t});const o=function(e){let t;switch(!0){case e<8.8:t=1;break;case e>8.8&&e<12:t=2;break;case e>12&&e<14:t=3;break;case e>14&&e<18:t=4;break;case e>18:t=5}return t}(t);!function(e,t){console.log({currVisRank:t});const r=G.returnLayerGroupObjs({});for(let a=0;a<r.length;a++){const n=r[a],o=n.layer_group;e.hasLayer(o)?n.visibility_rank>t&&e.removeLayer(o):e.getBounds().contains(V.getLayerGroupCenterLatLng(o))&&(o.addTo(e),console.log("evaluating"),e.hasLayer(o)&&n.visibility_rank>t&&e.removeLayer(o))}}(e,o)})),e.on("moveend",(function(){console.log(e.getCenter())})),function(e){var t=e._controlCorners;const r="leaflet-",a=e._controlContainer;function n(e,n){var o=r+e+" "+r+n;t[e+n]=L.DomUtil.create("div",o,a)}var o;n("verticalcenter","left"),n("verticalcenter","right"),t[o="basemap-controls-placeholder"]=L.DomUtil.create("div",o,a),console.log(t[o]),document.querySelector(".basemap-controls-container").appendChild(t[o])}(e),c=e,L.control.scale({position:"basemap-controls-placeholder"}).addTo(c),L.control.betterscale({position:"basemap-controls-placeholder",metric:!0,imperial:!1}).addTo(c)})(S,A),e=>U[e]?U[e]:"white"),H=(e,{useBuffer:t,bufferAmt:r,bufferUnits:a="kilometers"})=>t?b(e,r,{bufferUnits:a}):e;function j(e,{featureIndex:t,layerId:r,color:a,thickness:n,fillOpacity:o}={}){let s=z(t);return(r=r||h.getId(e))?{fillLayer:{id:r,type:"fill",source:{type:"geojson",data:e},paint:{"fill-color":`${a||s}`,"fill-opacity":o||.2}},outlineLayer:{id:`gjOutlineLayer_${r}`,type:"line",source:{type:"geojson",data:e},paint:{"line-color":`${a||s}`,"line-opacity":1,"line-width":n||1}}}:null}function J(e){const t=m.centerOfMass(e).geometry.coordinates;return{lngLat:t,latLng:[t[1],t[0]]}}const W=function(){try{const e=[],t=[];return{saveLayers:function(t){t&&e.push(t)},returnSavedLayers:function(){return e},saveClickedLayers:function(e){e&&t.push(e)},returnClickedLayers:function(){return t},returnPrevClickedLayer:()=>{if(t.length>=2)return t[t.length-2]}}}catch(e){console.error(`layersControllerErr: ${e.message}`)}}(),Z=function(){const e=[];return{saveMarker:function(t){t&&e.push(t)},returnSavedMarkers:function(){return e}}}(),q=function(){const e=[];return{savePopup:function(t){t&&e.push(t)},returnOpenPopups:function(){return e}}}(),V=(e=>{const t=[],r=G.getLayerGroups().baseMapLayerGroup;var a=new PIXI.loaders.Loader;a.add("marker","/assets/icons/location.svg");const n=(e,{useBuffer:t,bufferAmt:r,bufferUnits:a}={})=>{let n;try{if(!t){const{featProps:t}=V.getFeatureData(e),r=[t.featureCenterLat,t.featureCenterLng];if(!r)throw new Error("Cannot create GeoJSON feat. maker");n=L.circleMarker(r,{radius:4,weight:2,opacity:1,color:"white",fillOpacity:1,fillColor:"#6ab04c",fillColor:"#fbc531",fillColor:"#e84118",fillColor:"#ff6348",fillColor:"#4cd137"})}return n}catch(e){console.error(`createFeatMarkerErr: ${e.message}`)}};return{getMapZoom:(t=e)=>t.getZoom(),getLayerGroupCenterLatLng:e=>{const t=e.getLayers();return L.featureGroup(t).getBounds().getCenter()},getLayersInView:(t=e)=>{const r=[];return t.eachLayer((function(e){e instanceof L.layerGroup&&(console.log({layer:e}),t.getBounds().contains(e.getLatLng())&&r.push(e))})),r},getClusterPropsMarkup:e=>{console.log({clusterProps:e});try{return`\n               <div class= "plot-metadata-label--chunk-size"> \n                  <span> ${e.clusterArea.toFixed(1)} hectares </span>\n                  <span> ${(2.47105*e.clusterArea).toFixed(1)} acres </span> \n               </div>\n               <div class="metadata-label--owner-info__avg"> \n                  <span> ${e.clusterName} </span>\n                  <span>${e.clusterFeatsNum} Farmers â¢\n                     <span>${e.clusterLocation}</span>\n                  </span>\n               </div>\n               <div class="metadata-label--turn-by-turn" id="metadata_label_turn_by_turn">\n                  <a href="#" role="button" title="Plot boundary turn-by-turn directions" aria-label="Plot boundary turn-by-turn directions"></a>\n                     <span >\n                        <i id="" class="fas fa-route"></i>\n                     </span>\n               </div>`}catch(e){console.error(`HTMLMarkupErr: ${e.message}`)}},getFeatPropsMarkup:e=>{try{return`\n            <div class= "plot-metadata-label--chunk-size"> \n               <span> ${e.featureArea} hectares </span>\n               <span> ${(2.47105*e.featureArea).toFixed(1)} acres </span> \n            </div>\n            <div class="metadata-label--owner-info__avg"> \n               <span> Plot-${e.featureIndex} </span>\n               <span> ${_.startCase(l(Object.values(e.featureAdmin.admin1.names)))} </span>\n            </div>\n            <div class="metadata-label--turn-by-turn" id="metadata_label_turn_by_turn">\n               <a href="#" role="button" title="Plot boundary turn-by-turn directions" aria-label="Plot boundary turn-by-turn directions"></a>\n                  <span >\n                     <i id="" class="fas fa-route"></i>\n                  </span>\n            </div>`}catch(e){console.error(`HTMLMarkupErr: ${e.message}`)}},getClusterPlotHTMLMarker:(e,t,r,{draggable:a=!0})=>L.marker(t,{draggable:a,icon:L.divIcon({className:`${r}`,html:V.getFeatPropsMarkup(e)}),zIndexOffset:100}),getClusterMetadataMarker:(e,t,r,{draggable:a=!0})=>L.marker(t,{draggable:a,icon:L.divIcon({className:`${r}`,html:w(e)}),zIndexOffset:100}),initMarker:(e,{useBuffer:t,bufferAmt:r,bufferUnits:a})=>n(e,{useBuffer:t,bufferAmt:r,bufferUnits:a}),saveMarkerGroup:e=>{t.push(e)},panToPointFeat:async(t,{map:r=e,zoomLevel:a})=>{const n=L.geoJson();n.addData(t),r.flyTo(n.getBounds().getCenter(),a)},panToCoords:async(t,{map:r=e,zoomLevel:a})=>{r.flyTo(t,a,{animate:!0,duration:8.5})},getFeatCoords:async e=>{const t=L.geoJson();return t.addData(e),t.getBounds().getCenter()},panFeatCenter:async(t,{map:r=e,zoomLevel:a})=>{const n=turf.centerOfMass(t),o=await V.getFeatCoords(n);await V.panToCoords(o,{map:r,zoomLevel:a})},fitFeatBounds:(t,{map:r=e})=>{const a=L.geoJson(t);r.fitBounds(a.getBounds(),{padding:[150,150]})},addPointMarker:(t,{map:r=e,zoomLevel:a})=>{},getFeatPolyOutline:(e,{lineColor:t="white",lineWeight:r=3,lineOpacity:a=1,lineDashArray:n="",lineDashOffset:o=0}={})=>L.geoJSON(e,{color:t,weight:r,opacity:a,fillOpacity:0,dashArray:n,dashOffset:o}),getFeatPolyFill:(e,{fillColor:t="green",fillOpacity:r=.5}={})=>L.polygon([...e],{style:{fillColor:t,fillOpacity:r,color:"white",weight:3,dashArray:"3",opacity:3}}),getFeatureData:e=>{let t,r,a;const n=e;return n.geometry&&(r=n.geometry),r&&(a=n.geometry.coordinates),e.properties&&(t=e.properties),{featProps:t,featGeometry:r,featCoords:a,featCenter:void 0}},drawFeature:(e,{featLayerGroup:t=r,useBuffer:a,bufferAmt:o,bufferUnits:s,lineColor:l,lineWeight:i,lineOpacity:c,lineDashArray:u})=>{try{switch(m.getType(e)){case"Point":console.log("Fuck You Rita Nwaokolo"),n(e);break;case"GeometryCollection":throw new Error(`Cannot create marker for this feature: ${e} of type ${m.getType(e)}`);default:e=H(e,{useBuffer:a,bufferAmt:o,bufferUnits:s});const{featGeometry:r,featCoords:d}=V.getFeatureData(e);r?V.getFeatPolyOutline(r,{lineColor:l,lineWeight:i,lineOpacity:c,lineDashArray:u}).addTo(t):console.warn(`Cannot render feat ${e}. Geometry is invalid.`)}}catch(e){console.error(`LDrawFeatErr: ${e.message}`)}},renderFeatColl_2:(t,{map:r=e})=>{try{turf.geojsonType(t,"FeatureCollection","renderFeatColl");const e=(()=>{let e;return{saveUnion:t=>{e=t},returnUnion:()=>e}})();for(let r=0;r<t.features.length;r++){const a=t.features[r];if(0===r){if(!a.geometry||!turf.getType(a))break;e.saveUnion(a)}if(!a.geometry||!turf.getType(a))break;{const t=e.returnUnion();try{e.saveUnion(turf.union(a.geometry,t.geometry)),console.log(e.returnUnion())}catch(e){console.error(`turfUnionErr: ${e.message}`)}}}const r=e.returnUnion();console.log(r)}catch(e){console.error(e.message)}},renderFeatureMarker__2:async(t,{map:a=e})=>{const{featCenter:n}=V.getFeatureData(t);var o=L.canvasIconLayer({}).addTo(r),s=L.icon({iconUrl:"/assets/icons/location.svg",iconSize:[20,18],iconAnchor:[10,9]}),l=L.marker(n,{icon:s});o.addLayer(l)},renderFeaturesMarkers__2:async(t,{map:r=e})=>{canvasIconLayer.addOnClickListener((function(e,t){console.log(t)})),canvasIconLayer.addOnHoverListener((function(e,t){console.log(t[0].data._leaflet_id)})),L.icon({iconUrl:"/assets/icons/location.svg",iconSize:[20,18],iconAnchor:[10,9]});for(let e=0;e<t.length;e++){const r=t[e],{featCenter:a}=V.getFeatureData(r)}},renderFeatureMarker:async(t,{map:n=e})=>{const{featProps:o}=V.getFeatureData(t);var s=[o.featureCenterLat,o.featureCenterLng];a.load((function(e,t){var a=t.marker.texture;(e=>{var t=null,r=new PIXI.Container,n=new PIXI.particles.ParticleContainer(e.length,{vertices:!0});n.texture=a,n.baseTexture=a.baseTexture,n.anchor={x:.5,y:1},r.addChild(n);var o,s=/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream;return L.pixiOverlay((function(r,a){var s=r.getMap().getZoom(),l=r.getContainer(),i=r.getRenderer(),c=r.latLngToLayerPoint,u=r.getScale,d=1/u();if("add"===a.type){var p=c([9.469924785476636,7.217137278865754]);n.x=p.x,n.y=p.y,o=d/8,n.localScale=o;var f=c([...e]);n.addChild({x:f.x-p.x,y:f.y-p.y})}if("zoomanim"!==a.type){if("redraw"===a.type){var g=a.delta;if(null===t)return;var m=(t+=g)/17;m>1&&(m=1,t=null),m=easing(m),n.localScale=n.currentScale+m*(n.targetScale-n.currentScale)}i.render(l)}else{var y=a.zoom;if(y>=16||s>=16){t=0;var b=y>=16?1/u(a.zoom):o;n.currentScale=n.localScale,n.targetScale=b}}}),r,{doubleBuffering:s,destroyInteractionManager:!0})})(s).addTo(r)}))},renderPixiMarker:(t,{map:r=e})=>{const{featProps:a}=V.getFeatureData(t),n=[a.featureCenterLat,a.featureCenterLng];var o=new PIXI.loaders.Loader;o.add("marker","/assets/icons/marker-icon.png"),o.load((function(e,t){var a=t.marker.texture,o=[...n],s=new PIXI.Sprite(a);s.anchor.set(.5,1);var l=new PIXI.Container;l.addChild(s);var i,c=!0;L.pixiOverlay((function(e){var t=e.getMap().getZoom(),r=e.getContainer(),a=e.getRenderer(),n=e.latLngToLayerPoint,l=e.getScale();if(c){var u=n(o);s.x=u.x,s.y=u.y}(c||i!==t)&&s.scale.set(1/l),c=!1,i=t,a.render(r)}),l).addTo(r)}))},renderMarkerCluster:async(t,{map:r=e})=>{const a=function({centerDist:e,markerDist:t,zoomLimit:r,maxClusterRadius:a}){return L.markerClusterGroup({spiderfyShapePositions:function(r,a){var n,o=e,s=t,l=s*(r-1),i=a.y-l/2,c=[];for(c.length=r,n=r-1;n>=0;n--)c[n]=new Point(a.x+o,i+s*n);return c},showCoverageOnHover:!0,disableClusteringAtZoom:r,maxClusterRadius:function(e){return e<=14?a:1}})}({centerDist:35,markerDist:45,zoomLimit:15,maxClusterRadius:40});for(let e=0;e<t.length;e++)t[e]&&a.addLayer(t[e]);r.addLayer(a)},drawPolySurveyDetails:(e,t,{distThresh:r=10,bearingThresh:a=45})=>{const n=e.properties,o=n.clusterID?n.clusterID:n.featureID,s=e.geometry.coordinates[0],l={poly_id:0,start_coords:0,vertex_pairs:[],vertex_bearings:[],vertex_deltas:[]};try{!function(){for(let e=0;e<s.length;e++){l.poly_id=o;const a=s[e],n=s[e],i=void 0===s[e+1]?s[0]:s[e+1];l.vertex_pairs.push([n,i]);const c=m.midpoint(n,i).geometry.coordinates,u=1e3*m.distance(n,i,{distUnits:"kilometers"}),d=m.distance(n,i,{distUnits:"degrees"}),p=f(n,i),y=g(p);0!==d&&u>r?(L.marker([a[1],a[0]],{icon:L.divIcon({className:"polygon-vertex-coords-label--lg",html:`<span>${e}</span>${a[0].toFixed(6)}Â°N, ${a[1].toFixed(6)}Â°E`,iconSize:[100,30]}),zIndexOffset:98}).addTo(t),L.marker([c[1],c[0]],{draggable:!0,icon:L.divIcon({className:"polygon-vertex-dist-label--lg",html:`${u.toFixed(0)} m`,iconSize:[30,15]}),zIndexOffset:99}).addTo(t),L.marker([c[1],c[0]],{draggable:!0,icon:L.divIcon({className:"polygon-vertex-dist-bearing-label--lg",html:`${u.toFixed(0)} m, ${y}`,iconSize:[50,30]}),zIndexOffset:99}).addTo(t),l.vertex_bearings.push(p),l.vertex_deltas.push(u)):0===d&&(l.start_coords=a)}}()}catch(e){console.error(`surveyDetailsErr: ${e.message}`)}}}})(S),Y=(X=x,{clearPopups:()=>{var e=document.getElementsByClassName("mapboxgl-popup");e[0]&&e[0].remove(),q.returnOpenPopups().forEach((e=>{e&&e.remove}))},removeMarkers:e=>{if(e.length>0)for(const t of e)t.remove()},addLayer:(e,t)=>{e.getSource(t.id)?(e.removeLayer(t.id),e.removeSource(t.id),e.addLayer(t)):e.addLayer(t)},sanitizeLayers:({map:e,renderedLayers:t=null,layerIDs:r=null})=>{t&&t.length>0&&t.forEach((t=>{e.getSource(t.id)&&(e.removeLayer(t.id),e.removeSource(t.id))})),r&&r.forEach((t=>{e.getSource(t)&&(e.removeLayer(t),e.removeSource(t))}))},switchLayer:({layerId:e=s(),map:t=X})=>{t.setStyle(`mapbox://styles/mapbox/${e}`)},getLayerData:e=>{const t=e.features[0],r=t.properties;r.featureAdmin=JSON.parse(t.properties.featureAdmin);const a=e.lngLat,n=e.features[0].geometry;return{layerGeoJSON:t,layerProps:r,lngLatCenter:a,layerGeometry:n,layerCoords:n.coordinates[0],latLngCenter:J(n).latLng}},panToCoords:(e,t,r,{zoom:a=16,pitch:n=0,bearing:o=0,boundsPadding:s=0})=>{e.flyTo({center:t,zoom:a,pitch:n,bearing:o}),e.fitBounds(r,{padding:s})},drawGJPolygon:async(e,t,r)=>{try{let a=j(t,{featureIndex:r,color:null,thickness:2,fillOpacity:.1}).outlineLayer,n=j(t,{featureIndex:r,color:null,thickness:2,fillOpacity:.1}).fillLayer;if(!a||!n)throw new Error(`Could not get Mapbox fill &/or outline layers for ${t}`);Y.addLayer(e,a),Y.addLayer(e,n),K.addInteraction(e,n),W.saveLayers(a),W.saveLayers(n)}catch(e){console.error(`mapboxDrawFeatErr: ${e.message}`)}},drawGJPolygonLabel:async(e,t,r,{areaUnits:a="hectares"})=>{try{const n=function({labelIdx:e,labelText:t,labelPosition:r}){return{id:`polygonLabel_${e}`,type:"symbol",source:{type:"geojson",data:r},layout:{"text-font":["Open Sans Regular"],"text-field":`Plot_${e} (${t})`,"text-size":10},paint:{"text-color":"black"}}}({labelIdx:r+1,labelText:`${m.calcPolyArea(t,{units:a}).toFixed(0)} ${a}`,labelPosition:turf.centerOfMass(t)});Y.addLayer(e,n),W.saveLayers(n)}catch(e){console.error(`mapboxDrawLabelsErr: ${e.message}`)}},openFeatPopup:(e,t,r)=>{console.log({props:t}),Y.clearPopups();const a=new mapboxgl.Popup({closeOnClick:!0}).setLngLat(r).setHTML((e=>{try{return`\n         <div class="mapboxgl-popup-body flex-row-center">\n         \n            <div class="mapboxgl-popup-media-wrapper">\n               <img src="${e.featureAdmin.admin1.imageUrl}" alt=Feature Admin Photo" style="max-width:100%; opacity: 1;">\n            </div>\n      \n            <div class="mapboxgl-popup-text-wrapper">\n               <span class="mapboxgl-popup-title">${e.featureAdmin.admin1.fullName}</span>\n               <span>VASTID â¢ ${e.featureID}</span>\n               <span>Lat ${e.featureCenterLat.toFixed(6)}Â°N Lng ${e.featureCenterLng.toFixed(6)}Â°E </span>\n            </div>      \n\n         </div>`}catch(e){console.error(`featPopupMarkupErr: ${e.message}`)}})(t)).addTo(e);q.savePopup(a),e.on("closeAllPopups",(()=>{a.remove()}))},drawFeatFeatColl:(e,{map:t=X})=>{try{if(!t)throw new Error("This function requires a GeoJSON Feature or FeatureCollection");{const r=e._id,a=turf.coordAll(turf.centerOfMass(e))[0],n=j(e,{featureIndex:r,color:"#009432",thickness:1,fillOpacity:null}).outlineLayer,o=j(e,{featureIndex:r,color:"white",thickness:null,fillOpacity:.25}).fillLayer,s=(new mapboxgl.Marker).setLngLat(a);Y.sanitizeLayers({map:t,renderedLayers:W.returnSavedLayers()}),Y.removeMarkers(Z.returnSavedMarkers()),Y.addLayer(t,n),Y.addLayer(t,o),s.addTo(t),W.saveLayers(n),W.saveLayers(o),Z.saveMarker(s),console.log(W.returnSavedLayers())}}catch(e){console.error(`mapboxGJRenderErr: ${e.message}`)}}});var X;const K=(e=>{G.getLayerGroups().baseMapLayerGroup;const t=G.getLayerGroups().modalMapLayerGroup,r={feature_index:0,start_coords:0,vertex_pairs:[],vertex_bearings:[],vertex_deltas:[]};try{const a=(a,n)=>{a.on("click",`${n.id}`,(o=>{const s=Y.getLayerData(o);ae.affectDOMElement(n.id,"selected"),Y.openFeatPopup(a,s.layerProps,s.lngLatCenter);const l=`clickedLayer_${n.id}`,i=j(s.layerGeoJSON,{layerId:l,color:"black",thickness:4,fillOpacity:.2}).fillLayer;Y.sanitizeLayers({map:a,renderedLayers:W.returnClickedLayers()}),Y.addLayer(a,i),W.saveLayers(i),W.saveClickedLayers(i),function(t){$("#exampleModal").modal("show"),setInterval((()=>{e.invalidateSize()}),500);const r=W.returnPrevClickedLayer();r&&(console.log(r.id),console.log(W.returnClickedLayers()),t===r.id&&Y.sanitizeLayers({map:a,renderedLayers:W.returnClickedLayers()}))}(i.id),function(e,t,a){ne().renderMultiFeatsChk||(console.log({leafletLayerGroup:a}),a.clearLayers(),console.log({leafletLayerGroup:a}));const n=e.featureIndex,o=e.layerProps,s=e.layerCoords,l=e.latLngCenter,i=e.layerGeometry,c=L.geoJson(i).getBounds();setInterval((()=>{t.fitBounds(c,{padding:[50,80]})}),1500),L.marker(e.latLngCenter).addTo(a),V.getFeatPolyOutline(i,{lineWeight:4}).addTo(a),V.getFeatPolyFill(s).addTo(a),V.getClusterPlotHTMLMarker(o,l,"plot-metadata-label",{draggable:!0}).addTo(a);for(let e=0;e<s.length;e++){r.feature_index=n;const t=s[e],o=s[e],l=void 0===s[e+1]?s[0]:s[e+1];r.vertex_pairs.push([o,l]);const i=m.midpoint(o,l).geometry.coordinates,c=1e3*m.distance(o,l,{distUnits:"kilometers"}),u=m.distance(o,l,{distUnits:"degrees"}),d=f(o,l),p=g(d);0!==u&&c>5?(L.marker([t[1],t[0]],{icon:L.divIcon({className:"plot-polygon-vertex-coords-label",html:`<span>${e}</span> ${t[0].toFixed(6)}Â°N, ${t[1].toFixed(6)}Â°E`,iconSize:[70,15]}),zIndexOffset:98}).addTo(a),L.marker([i[1],i[0]],{draggable:!0,icon:L.divIcon({className:"plot-polygon-vertex-dist-label",html:`${c.toFixed(0)} m`,iconSize:[30,15]}),zIndexOffset:99}).addTo(a),L.marker([i[1],i[0]],{draggable:!0,icon:L.divIcon({className:"plot-polygon-vertex-dist-bearing-label",html:`${c.toFixed(0)} m, ${p}`,iconSize:[30,15]}),zIndexOffset:99}).addTo(a),r.vertex_bearings.push(d),r.vertex_deltas.push(c)):0===u&&(r.start_coords=t)}}(s,e,t)}))},n=(e,t)=>{e.on("mouseenter",`${t.id}`,(function(r){e.getCanvas().style.cursor="pointer",ae.affectDOMElement(t.id,"selected"),ae.scrollDOMElement(t.id)}))},o=(e,t)=>{e.on("mouseleave",`${t.id}`,(function(){e.getCanvas().style.cursor="",ae.affectDOMElement(t.id,"selected")}))};return{addInteraction:(e,t)=>{a(e,t),n(e,t),o(e,t)}}}catch(e){console.error(`fillLayerHandlerErr: ${e.message}`)}})(A),Q=function(e,t){try{const r=async(t,{zoomLevel:r})=>{console.time("panBasemap"),await V.panFeatCenter(t,{map:e,zoomLevel:r}),console.timeEnd("panBasemap")},a=async(t,{zoomlevel:r})=>{console.time("fitClusterBounds"),V.fitFeatBounds(t,{map:e}),console.timeEnd("fitClusterBounds")},n=async e=>{console.time("panSidemap");const r=turf.coordAll(turf.centerOfMass(e))[0],a=turf.bbox(e);Y.panToCoords(t,r,a,{zoom:16,pitch:0,bearing:0,boundsPadding:0}),console.timeEnd("panSidemap")},o=(e,{zoomLevel:r})=>{try{console.info({geoJSONFeat:e});const a=turf.coordAll(turf.centerOfMass(e))[0],n=turf.bbox(e);Y.panToCoords(t,a,n,{zoom:r,pitch:0,bearing:0,boundsPadding:0})}catch(e){console.error(`panClusterMapErr: ${e.message}`)}};return{refreshClusterPlotsMap:e=>{var r=e.target.id;r&&Y.switchLayer({layerId:r,map:t})},renderFeatPopup:(e,r)=>{Y.openFeatPopup(t,e,r)},panToClusterPlot:(e,{zoomLevel:t})=>{o(e,{zoomLevel:t})},renderFeatColl:(e,{useBuffer:t,bufferAmt:r,bufferUnits:a,lineColor:n,lineWeight:o,lineOpacity:s,lineDashArray:l}={})=>{for(let i=0;i<e.features.length;i++){const c=e.features[i];V.drawFeature(c,{useBuffer:t,bufferAmt:r,bufferUnits:a,lineColor:n,lineWeight:o,lineOpacity:s,lineDashArray:l})}},getClusterPoly:async(e,{useBuffer:t,bufferAmt:r,bufferUnits:a}={})=>{const n=e.properties;if(n){const o=h.getFeatCollPoly(e,{useBuffer:t,bufferAmt:r,bufferUnits:a});return o&&(o.properties=n),o}},renderClusterPoly:(e,{bufferUnits:t}={})=>{try{const r=e.properties,a=J(e.geometry).latLng;if(e&&"Polygon"===m.getType(e)){let n,o;const s=G.initLayerGroup("cluster-metadata-labels",{visibilityRank:2});V.getClusterMetadataMarker(r,a,"plot-metadata-label",{draggable:!0}).addTo(s);const l=G.initLayerGroup(r.clusterID,{visibilityRank:5});V.drawPolySurveyDetails(e,l,{bearingThresh:45,distThresh:30}),V.drawFeature(e,{lineColor:"#6ab04c",lineWeight:5}),V.drawFeature(e,{lineColor:"#badc58",lineWeight:1});let i=h.getBboxPoly(e);if(i&&(n=h.getPresentationPoly(i,{useBuffer:!0,bufferAmt:.03,bufferUnits:t})),n&&(o=h.getBboxPoly(n)),o){const e=G.initLayerGroup(r.clusterID,{visibilityRank:4});L.marker(a).addTo(e),o.properties=r,V.drawFeature(o,{featLayerGroup:e,lineColor:"cyan",lineWeight:.55}),V.drawPolySurveyDetails(o,e,{bearingThresh:0,distThresh:5})}}}catch(e){console.error(`renderClusterPolyErr: ${e.message}`)}},populateClustersOnBasemap:async(t,{useBuffer:r,bufferAmt:a,bufferUnits:n}={})=>{if(1==V.getMapZoom()<8.5&&(r=!1),t.length>0)for(let o=0;o<t.length;o++){const s=t[o],l=[];if(s.features.length>0){let e;e=await Q.getClusterPoly(s,{useBuffer:!0,bufferAmt:.01,bufferUnits:n}),e&&Q.renderClusterPoly(e,{bufferUnits:n});for(let e=0;e<s.features.length;e++){const t=s.features[e],o=V.initMarker(t,{useBuffer:r,bufferAmt:a,bufferUnits:n});l.push(o)}}l.length>0?(V.saveMarkerGroup(l),await V.renderMarkerCluster(l,{map:e})):console.warn("...no cluster plots' markers to render")}},renderClusterPlotsOnBasemap:async(e,{useBuffer:t,bufferAmt:r,bufferUnits:a,lineColor:n,lineWeight:o,lineOpacity:s,lineDashArray:l}={})=>{console.time("renderClusterPlots");for(let i=0;i<e.features.length;i++){const c=e.features[i];V.drawFeature(c,{useBuffer:t,bufferAmt:r,bufferUnits:a,lineColor:n,lineWeight:o,lineOpacity:s,lineDashArray:l})}console.timeEnd("renderClusterPlots")},renderClusterPlotsOnSidemap:async(e,{useBuffer:r,bufferAmt:a,bufferUnits:n})=>{if(e.features)for(let o=0;o<e.features.length;o++){const s=e.features[o],l=H(s,{useBuffer:r,bufferAmt:a,bufferUnits:n});await Y.drawGJPolygon(t,l,o)}else console.log("There are no features to render.")},renderSidemapClusterPlotsLabels:async(e,{useBuffer:r=!1,bufferUnits:a,bufferAmt:n,areaUnits:o})=>{if(e.features)for(let r=0;r<e.features.length;r++){let a=e.features[r];await Y.drawGJPolygonLabel(t,a,r,{areaUnits:o})}else console.log("There are no features for which to render labels.")},renderClusterOnMaps:(o,{baseMapZoomLvl:s=0,useBuffer:l=!1,bufferUnits:i,bufferAmt:c,areaUnits:u})=>{console.log({featColl:o}),t.fire("closeAllPopups"),(async()=>{await n(o),await N({logger:console.log}).execute((()=>{r(o,{zoomLevel:s})})),await N({logger:console.log}).execute((()=>{a(o,{zoomLevel:s})})),await Q.renderClusterPlotsOnBasemap(o,{useBuffer:l,bufferAmt:c,bufferUnits:i,lineColor:"#feca57",lineWeight:1.5,lineDashArray:"3"})})(),(async()=>{await Q.renderClusterPlotsOnSidemap(o,{useBuffer:l,bufferAmt:c,bufferUnits:i}),await Q.renderSidemapClusterPlotsLabels(o,{useBuffer:l,bufferUnits:i,bufferAmt:c,areaUnits:u})})();const d=G.returnLayerGroupObjs({layerGroupId:o.properties.clusterID});console.log({layerGroupObjs:d}),d.forEach((t=>{t&&t.layer_group&&t.layer_group.addTo(e)}))}}}catch(e){console.error(`renderMapsErr: ${e.message}`)}}(S,x);(()=>{const e=document.getElementById("cluster_feats_listing_body");var t=L.DomUtil.create("a","link",e);t.textContent="Cluster Plot Owner",t.href="#";var r=new L.Marker([36.8370066107919,10.059871561852127]).bindPopup("Popup").addTo(S);t.marker=r,r.link=t,L.DomEvent.addListener(t,"mouseover",(function(e){e.target.marker.openPopup()})),L.DomEvent.addListener(t,"mouseout",(function(e){e.target.marker.closePopup()})),r.on("mouseover",(function(e){e.target.link.style.backgroundColor="pink"})),r.on("mouseout",(function(e){e.target.link.style.backgroundColor="white"}))})();const ee=function(){let e={},t={};const r={name:"",data:{}};let a=[];const n=[];let o;return{saveDefaultSettings:function(t){e=t},retreiveDefaultSettings:function(){return e},saveCurrentSettings:function(e){t=e},retreiveCurrentSettings:function(){return t},cacheDBCollection:function(e,t){const n=Object.create(r);n.name=e,n.data=t,a=a.filter((t=>t.name!==e)),a.push(n),console.log({CACHED_DB_COLLECTIONS:a})},findUpdateCachedDBCollection:(e,t)=>{},returnCachedDBCollections:function(){return console.log({CACHED_DB_COLLECTIONS:a}),a},returnCachedDBCollection:function(e){return a.find((t=>t.name===e))||null},deleteCachedDBCollection:e=>{a=a.filter((t=>t.name!==e))},saveRenderedGeojson:function(e){e&&(n.push(e),o=e,console.log({currRenderedGeoJSON:o}))},retreiveRenderedGJArray:function(){return n},retreiveLastRenderedGJ:function(){return 1===n.length?(console.log({lastRenderedGeoJSON:undefined}),n.length[0]):n[n.length-1]||null},getRenderedGeoJSON:()=>o}}(),te=e=>{if(!e||"object"!=typeof e)return console.log("geojson fail"),!1;if(!e.type||"string"!=typeof e.type)return console.log("geojson fail"),!1;const t=e.type.toLowerCase();if("feature"!==t&&"featurecollection"!==t)return console.log("geojson fail"),!1;if("feature"===t&&(!e.geometry||"object"!=typeof e.geometry))return console.log("geojson fail"),!1;if(!("featurecollection"!==t||e.features&&Array.isArray(e.features)))return console.log("geojson fail"),!1;if(e.geometry){const t=e.geometry;if(!t.type||"string"!=typeof t.type)return console.log("geojson fail"),!1;const r=t.type.toLowerCase();if("point"!==r&&"multipoint"!==r&&"linestring"!==r&&"multilinestring"!==r&&"polygon"!==r&&"multipolygon"!==r&&"geometrycollection"!==r)return console.log("geojson fail"),!1;const a=[].concat(...[].concat(...t.coordinates));if(!t.coordinates||!Array.isArray(t.coordinates))return console.log("geojson fail"),!1;if(("point"===r||"multipoint"===r)&&t.coordinates.length<2)return console.log("geojson fail"),!1;if(("linestring"===r||"multilinestring"===r)&&t.coordinates.length<2)return console.log("geojson fail"),!1;if(("polygon"===r||"multipolygon"===r)&&a.length<3)return console.log("geojson fail"),!1;if("geometrycollection"===r&&0===t.geometries.length)return console.log("geojson fail"),!1}if(e.features)for(let t=0;t<e.features.length;t++)if(!te(e.features[t]))return console.log("geojson fail"),!1;return!0},re=te,ae={createDiv:(...e)=>{const t=document.createElement("div");return e.forEach((e=>{t.classList.add(e)})),t},toggleClassList:(e,...t)=>{e&&1===e.nodeType&&t.forEach((t=>{e.classList.toggle(t)}))},addClass:(e,...t)=>{try{e&&1===e.nodeType&&t.forEach((t=>{e.classList.add(t)}))}catch(e){console.error(`addClassErr: ${e.message}`)}},removeClass:(e,...t)=>{try{e&&1===e.nodeType&&t.forEach((t=>{e.classList.remove(t)}))}catch(e){console.error(`removeClassErr: ${e.message}`)}},addRemoveClass:(e,t)=>{try{const r=document.getElementsByClassName(`${t}`);r[0]&&r[0].classList.remove(`${t}`),e.classList.add(`${t}`)}catch(e){console.error(`addRemoveClassErr: ${e.message}`)}},toggleInnerText:(e,t,r)=>{e&&(e.innerText===t?e.innerText=r:e.innerText=t)},affectDOMElement:(e,t)=>{const r=document.getElementById(e);ae.addRemoveClass(r,t)},appendList:(e,t)=>{try{e.appendChild(t)}catch(e){console.error(`appendListErr: ${e}`)}},togleBlockElement:e=>{"block"!==e.style.display?e.style.display="block":"block"===e.style.display?e.style.display="none":"none"===e.style.display&&(e.style.display="block")},blockElement:e=>{e.style.display="block"},displayFlexElement:e=>{e.style.display="flex"},hideElement:e=>{e.style.display="none"},getDataset:e=>{try{const t=e.dataset;if(!t)return null;for(const e in t)return t[e]}catch(e){console.error(`getDataStreamErr: ${e}`)}},populateDataset:(e,t,r)=>{e.dataset[t]||(e.dataset[t]=r)},getParentElement:(e,{parentLevel:t=1})=>{let r;if(e&&1===e.nodeType){for(let a=0;a<t;a++)r=e.parentElement,e=r;return r}return null},getSiblingElements:e=>{try{let t=[];if(!e.parentNode)return t;let r=e.parentNode.firstChild;for(;r;)1===r.nodeType&&r!==e&&t.push(r),r=r.nextSibling;return t}catch(e){console.error(`getSibElemErr: ${e}`)}},getNestedSiblings:(e,t,r)=>{var a=[];if(!e.parentNode)return a;let n;for(;t>0;)n=e.parentNode,t-=1;let o=n.childNodes[r-1];return console.log(o),o=n.nextSibling.childNodes[r-1],console.log(a),a},getSubordinates:(e,t,r)=>{try{let a=[];if(1===e.nodeType){let n=e.querySelectorAll(`${r}`);for(const e of n)e!==t&&a.push(e)}return a}catch(e){console.error(`getSubElementsErr: ${e.message}`)}},scrollDOMElement:e=>{document.getElementById(e).scrollIntoView({behavior:"smooth",block:"start",inline:"nearest"})},masterSlaveControl:(e,t)=>{e.addEventListener("change",(e=>{e.target.checked?t.forEach((e=>{e.checked=!0,e.labels[0]&&e.labels[0].innerText})):t.forEach((e=>{e.checked=!1}))})),t.forEach((t=>{t.addEventListener("change",(r=>{console.log("parentNode",e.parentNode),console.log("parentNode style",e.parentNode.style.display),ae.displayFlexElement(e.parentNode.parentNode),!1===t.checked&&(e.checked=!1)}))}))}},ne=()=>{try{const e=p(a().baseMapRadios).radioValue,t=p(a().plotsMapStyleRadios).radioValue;return{baseMapKey:e,plotsMapStyleKey:t,distanceUnits:p(a().distanceUnitsRadios).radioValue,areaUnits:p(a().areaUnitsRadios).radioValue,clusterMap:{zoomValue:a().clusterMapZoomRange.value},bufferFeatsChk:a().bufferFeatsChkBx.checked,renderMultiFeatsChk:a().renderMultiFeatsChkBx.checked}}catch(e){console.error(`pollAppSettingsErr: ${e.message}`)}},oe=(e=>{const t=p(e.baseMapRadios).radioValue,r=p(e.plotsMapStyleRadios).radioValue,a=p(e.distanceUnitsRadios).radioValue,n=p(e.areaUnitsRadios).radioValue;return{getValues:()=>({baseMapKey:t,plotsMapStyleKey:r,distanceUnits:a,areaUnits:n,clusterMap:{zoomValue:e.clusterMapZoomRange.value},bufferFeatsChk:e.bufferFeatsChkBx.checked,renderMultiFeatsChk:e.renderMultiFeatsChkBx.checked})}})(a()),se=(le=a(),{clusterTitleClickSeq:e=>{e.preventDefault(),console.log(ne()),console.log(oe.getValues());const t=ae.getParentElement(e.target,{parentLevel:3});var r,a;a=ae.getSiblingElements(t),(r=t).scrollIntoView({behavior:"smooth",block:"start",inline:"nearest"}),a.forEach((e=>{e!==r&&ae.removeClass(e,"is-active")})),ae.toggleClassList(r,"is-active");const n=JSON.parse(ae.getDataset(t));re(n)&&(ie.clusterDetailsModal(le.resultModalDiv,n),ae.removeClass(le.clusterInsightsTabBtn,"active"),ae.removeClass(le.clusterInsightsTabPane,"active"),ae.addClass(le.clusterDetailsTabBtn,"active"),ae.addClass(le.clusterDetailsTabPane,"active"),ie.clusterFeatsSidebar(n),Q.renderClusterOnMaps(n,{baseMapZoomLvl:o.LEAFLET_ADMIN_LEVEL_3_ZOOM,useBuffer:ne().bufferFeatsChk,bufferUnits:ne().distanceUnits,bufferAmt:o.PARCELIZED_CLUSTER_PLOTS_BUFFER,areaUnits:ne().areaUnits}),ee.saveRenderedGeojson(n))},featCardClickSeq:(e,t)=>{t.currentTarget;try{for(var r=0;r<e.length;r++)t.currentTarget.id===h.getId(e[r])&&(Q.panToClusterPlot(e[r],{zoomLevel:ne().clusterMap.zoomValue}),Q.renderFeatPopup(e[r].properties,m.getLngLat(e[r])));ae.addRemoveClass(t.currentTarget,"selected");const a=ae.getSiblingElements(t.currentTarget)[0];a.classList.toggle("flex-display");const n=ae.getParentElement(a,{parentLevel:1});n.scrollIntoView(!0),ae.getSiblingElements(n).forEach((e=>{ae.toggleClassList(e,"dim-opacity","disable-click")}))}catch(e){console.error(`cardClickSeqErr: ${e.message}`)}}});var le;const ie=(ce=a(),{clusterDetailsModal:(e,t)=>{e.innerHTML="";const r=t.properties;e.innerHTML+=B.getInnerMarkup(r),ae.blockElement(e),a().resultModalCloseBtn.addEventListener("click",(()=>{ae.hideElement(a().resultModalDiv)}))},clusterResultsSidebar:({dbCollection:e})=>{try{e.length&&(console.log({dbCollection:e}),e.map((e=>{const t=D.getClusterResultDiv(e);ae.populateDataset(t,o.GEOCLUSTER_RECORD_DATA_ATTR_NAME,JSON.stringify(e)),ae.appendList(ce.resultsListWrapper,t),ae.appendList(ce.resultsListWrapper,ae.createDiv("h-divider-grey-100"))})))}catch(e){console.error(`clustersSidebarErr: ${e}`)}},clusterFeatsSidebar:async e=>{try{if(e){t=e.properties,ce.clusterFeatsNumEl.innerText=c(+t.clusterFeatsNum),ce.clusterAreaEl.innerText=`${c(+t.clusterArea.toFixed(1))} ha.`,ce.clusterUsedAreaEl.innerText=`${c(+t.clusterUsedArea.toFixed(1))} ha.`,ce.clusterUnusedAreaEl.innerText=`${c(+t.clusterUnusedArea.toFixed(1))} ha.`;const r=e.features,a=ce.featsListingDiv;a.innerHTML="";for(let e=0;e<r.length;e++){let t=r[e];console.log({clusterFeature:t});const{clusterFeatCard:n,clusterFeatCardWrapper:o}=await R.getClusterFeatDiv(t.properties);n.id=h.getId(t),n.addEventListener("click",(e=>{se.featCardClickSeq.call(e,r,e)})),ae.populateDataset(n,"clusterfeatdatastream",JSON.stringify(t)),ae.appendList(a,o)}}}catch(e){console.error(`clusterFeatsSidebarErr: ${e.message}`)}var t}});var ce;async function ue(e,t,r,{queryString:a}={}){a=a||(a="");try{const n=await e(`${t}/${r}/${a}`),o=await n.json();if(!o)throw new Error(`The API endpoint [ ${t}/${r}/${a} ] did not respond; check your connection`);if("fail"!==o.status)return o;throw new Error(`API Request Failed. ${JSON.stringify(o)}`)}catch(e){return console.error(`queryAPIErr: ${e.message}`),null}}async function de(e,t,r,{queryString:n}={}){try{n=n||(n="");const o=function(){return ue.call(e,window.fetch,t,r,{queryString:n})},s={startDisplayFn:F.activityStart,endDisplayFn:F.activityEnd,appActivityIndWrapper:a().appActivityIndWrapper,appActivityIndEl:a().appActivityIndEl,appActivityStartIndTextEl:a().appActivityStartIndTextEl,appActivityEndIndTextEl:a().appActivityEndIndTextEl,appActivityIndText:"FETCHING DATA"};return(await N({logger:void 0}).executeNotify(o,s))?.returnedData}catch(e){console.error(`getAPIResourceErr: ${e.message}`)}}(e=>{if($("#test_feat_card").on("click",(function(e){const t=ae.getSiblingElements(e.currentTarget)[0];t.classList.toggle("flex-display");const r=ae.getParentElement(t,{parentLevel:1});ae.getSiblingElements(r).forEach((e=>e.classList.toggle("dim-opacity")))})),$(document).ready((function(){$("#avg_settings_sidebar_toggle_btn").on("click",(function(){$("#avg_settings_sidebar").toggleClass("active")})),$("#settings_sidebar_close_btn").on("click",(function(){$("#avg_settings_sidebar").toggleClass("active")}))})),e.buttons)for(const t of e.buttons)t.addEventListener("click",(e=>{const t=e.currentTarget,r=document.createElement("span"),a=Math.max(t.clientWidth,t.clientHeight),n=a/2;r.style.width=r.style.height=`${a}px`,r.style.left=e.clientX-t.offsetLeft-n+"px",r.style.top=e.clientY-t.offsetTop-n+"px",r.classList.add("ripple-circle");const o=t.getElementsByClassName("ripple-circle")[0];o&&o.remove(),t.appendChild(r)}));if(e.sidebarExpandBtn&&e.appSidebar&&e.sidebarExpandBtn.addEventListener("click",(()=>{e.appSidebar.classList.toggle("expanded")})),$("#results_search_box")&&$("#results_search_box").on("change paste keyup",(function(){var e=$("#results_search_input").val();$(".result-item-title").each((function(){-1!=$(this).text().toUpperCase().indexOf(e.toUpperCase())?$(this).show():$(this).hide()}))})),e.clusterResultsBody){const t=e.clusterResultsBody,r=e.resultsFilterBtn,a=e.resultsScrollTopBtn;t.addEventListener("scroll",(()=>{switch(!0){case t.scrollTop>300&&t.scrollTop<1e3:r&&(r.style.display="block");break;case t.scrollTop>1e3:a&&(a.style.display="block");break;default:r&&(r.style.display="none"),a&&(a.style.display="none")}}))}if(e.resultsScrollTopBtn&&e.resultsScrollTopBtn.addEventListener("click",(()=>{const t=e.clusterResultsBody;t&&(t.scrollTop=0)})),e.areaUnitsRadios&&e.areaUnitsRadios.forEach((e=>{e.addEventListener("change",(async e=>{ee.retreiveLastRenderedGJ()&&Q.renderSidemapClusterPlotsLabels(ee.retreiveLastRenderedGJ(),{useBuffer:ne().bufferFeatsChk,bufferUnits:ne().distanceUnits,bufferAmt:o.PARCELIZED_CLUSTER_PLOTS_BUFFER,areaUnits:ne().areaUnits})}))})),e.plotsMapStyleRadios&&e.plotsMapStyleRadios.forEach((e=>{e.addEventListener("change",(e=>{Q.refreshClusterPlotsMap(e),console.log(ee.retreiveLastRenderedGJ()),ee.retreiveLastRenderedGJ()&&(console.log("FUCK MIKE LINDEL"),Q.renderClusterOnMaps(ee.retreiveLastRenderedGJ(),{useBuffer:ne().bufferFeatsChk,bufferUnits:ne().distanceUnits,bufferAmt:o.PARCELIZED_CLUSTER_PLOTS_BUFFER,areaUnits:ne().areaUnits}))}))})),console.log(e.paneResizeBtns),e.paneResizeBtns&&e.paneResizeBtns.forEach((e=>e.addEventListener("click",(()=>{ae.toggleInnerText(e,"EXPAND","COLLAPSE")})))),e.clusterTitleDivs)for(const t of e.clusterTitleDivs)t.addEventListener("click",se.clusterTitleClickSeq);if(e.resultItemCheckboxes&&e.masterResultCheckbox){const t=e.resultItemCheckboxes,r=e.masterResultCheckbox;ae.masterSlaveControl(r,t)}e.clusterFilterCheckboxes&&e.clusterFilterCheckboxes.forEach((e=>{e.addEventListener("change",(async e=>{const t=e.target.labels[0].innerText;e.target.checked?console.log(`%c ${t} checked`,"color: white; background-color:blue;"):console.log(`%c ${t} un-checked`,"color: white; background-color:green;")}))})),e.clusterFilterCheckboxMasters&&e.clusterFilterCheckboxMasters.forEach((e=>{const t=ae.getParentElement(e,{parentLevel:4}),r=ae.getSubordinates(t,e,".form-check-input");ae.masterSlaveControl(e,r)}))})(a());const pe=(()=>{function e(e){const t=e.indexOf("/");return e.slice(t+1)}function t(e,t){const r=e.returnCachedDBCollection(t);return null!==r&&0!==r.data.length}const r=o.GEOCLUSTERS_API_HOST,a=n.GEOCLUSTERS.RESOURCE_PATHS.PARCELIZED_CLUSTERS_METADATA,s=n.GEOCLUSTERS.RESOURCE_PATHS.PARCELIZED_CLUSTER,l=n.GEOCLUSTERS.RESOURCE_PATHS.PARCELIZED_CLUSTERS_ONLY,c=e(l),u=e(a),d=[c,u];return{cacheLiveData:async(e,n)=>{for(const o of d){if(t(n,o)){console.log("Collection alredy cached");break}{console.log("Caching all parcelized clusters from DB");const t=await de(e,r,o===c?l:a,{});if(!t)return;n.cacheDBCollection(o,t)}}},getNewClusters:async(e,t)=>{console.log("Tryng to download new parcelized clusters");const n=t.returnCachedDBCollection(u),o=await de(e,r,a,{});if(!o)return null;let l=[...o.data.collection_metadata.ids];const i=v({expandingArray:l,staticArray:n.data.data.collection_metadata.ids}),c=await(async(e,t,r,a)=>{console.log("Retreiving geojson for each new cluster");const n=[];for(const o of e){const e=`?${o}`,s=await de(t,r,a,{queryString:e});s?.data&&n.push(s.data.parcelizedAgcData)}return n})(i,e,r,s);return c||null},cacheNewClusters:(e,t)=>{const r=t.returnCachedDBCollection(c),a=i.evaluateValue(r,"data","data","collection_docs");console.log({collectionDocs:a});const n=[...a,...e],o={...r,data:{...r.data,collection_docs:n}};console.log({updatedCachedCollection:o}),t.cacheDBCollection(collectionName,o)},renderNewClusters:(e,t)=>{}}})(),fe=6e4,ge=500,me=65e3,ye=async()=>{try{const e=await axios({method:"GET",url:"/api/v1/users/logout"});console.log({logoutResponse:e}),e&&"success"===e.data.status&&location.assign("/")}catch(e){console.error({logoutErr:e})}};document.documentElement;const be=(()=>{function e(e,t){"nga-geo-pol-regions"===e&&t&&Q.renderFeatColl(t,{useBuffer:!1,lineColor:o.MAP_POLYGON_LINE_COLORS.BASEMAP.GEO_POL_REGIONS,lineWeight:o.MAP_POLYGON_LINE_WEIGHTS.BASEMAP.GEO_POL_REGIONS})}return{cachePreLoadedGeoclusters:async()=>{const{geoClusters:e}=function(){try{return{geoClusters:JSON.parse(ae.getDataset(a().geoClustersDatasetEl))}}catch(e){console.error(`retreiveGJErr: ${e.message}`)}}();ee.cacheDBCollection(I,[...e])},renderPreLoadedGeoclusters:async()=>{const e=i.evaluateValue(ee.returnCachedDBCollection(I),"data");console.log({preLoadedGeoclusters:e}),await(async e=>{e&&e.length>0&&await Q.populateClustersOnBasemap(e,{useBuffer:ne().bufferFeatsChk,bufferUnits:ne().distanceUnits,bufferAmt:o.PARCELIZED_CLUSTER_PLOTS_BUFFER})})(e)},renderCachedAdminBounds:async t=>{const r=o.ADMIN_BOUNDS_GEOJSON_API_HOST,a=o.ADMIN_BOUNDS_GEOJSON_API_RESOURCE_PATHS;for(const n of a){const a=n.slice(n.indexOf("/nga")+1);console.log({resourceName:a});const o=await de(t,r,n,{});o&&o.data&&(ee.cacheDBCollection(a,o.data),e(a,o.data))}},fireAutoUpdateWorker:async e=>{let t=fe,r=t;setTimeout((async function n(){if(r>=me)return;await pe.cacheLiveData(e,ee);const o=await pe.getNewClusters(e,ee);o&&o.length>0&&(r=t,pe.cacheNewClusters(o,ee),((e,t)=>{const r=i.evaluateValue(ee.returnCachedDBCollection(e),"data");for(const e of t)e.properties.clusterID&&r.push(...e);ee.deleteCachedDBCollection(e),ee.cacheDBCollection(e,r)})(I,o),await(async e=>{!function(){const e=i.evaluateValue(ee.returnCachedDBCollection("v1/legacy-agcs"),"data");if(console.log({legacyClustersColl:e}),e){ie.clusterResultsSidebar({dbCollection:e});const t=document.querySelectorAll(".result-item-title");t.length>a().clusterTitleDivs.length&&clusterTitleClickHandler(t)}}()})()),o&&0===o.length&&(console.log("Incrementing the auto-worker data query interval"),r+=ge),o||(r+=2*ge),console.log({updatedInterval:r}),setTimeout(n,r)}),r)},addDOMListeners:()=>{const e=a().logoutBtn;e&&e.addEventListener("click",ye)}}})();window.addEventListener("DOMContentLoaded",(async e=>{ee.saveDefaultSettings(ne()),be.addDOMListeners(),await be.cachePreLoadedGeoclusters(),await be.renderPreLoadedGeoclusters(),await be.renderCachedAdminBounds(e),await be.fireAutoUpdateWorker(e)})),window.addEventListener("DOMContentLoaded",(async e=>{}))}},t={};function r(a){var n=t[a];if(void 0!==n)return n.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,r),o.exports}r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r(291)})();